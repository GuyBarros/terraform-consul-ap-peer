# Service to expose service-b-v2
apiVersion: v1
kind: Service
metadata:
  name: service-b-v2
spec:
  selector:
    app: service-b-v2
  type: LoadBalancer
  ports:
  - name: http
    protocol: TCP
    port: 9090
    targetPort: 9090
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-b-v2
---
# service-b-v2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-b-v2
  labels:
    app: service-b-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-b-v2
  template:
    metadata:
      labels:
        app: service-b-v2
      annotations:
        "consul.hashicorp.com/connect-inject": "true"
        "consul.hashicorp.com/transparent-proxy": "false"
#       "consul.hashicorp.com/connect-service-upstreams": "service-c:9091"
        "consul.hashicorp.com/connect-service-upstreams": "service-c-v1.default.tenant-2:9091"
         #For the upstream line, this points to the #"<servicename>.<consul-namespace>.<partitionname>:<port#>" of the upstream service.
         #If its in the same partition and namespace, it can be omitted, ex:
#        "consul.hashicorp.com/connect-service-upstreams": "service-c:9091"
    spec:
      serviceAccountName: service-b-v2
      containers:
      - name: service-b-v2
        image: nicholasjackson/fake-service:v0.22.4
        ports:
        - containerPort: 9090
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:9090"
        - name: "UPSTREAM_URIS"
          value: "http://127.0.0.1:9091" 
          #Set value above if TProxy is off
#          value: "http://service-c.virtual.default.ns.tenant-1.ap.dc1.dc.consul:9091"
          #Set value above if TProxy is on: <service>.virtual.<namespace>.ns.<partition>.ap.<datacenter>.dc.<domain>                   
        - name: "NAME"
          value: "service-b-v2"
        - name: "MESSAGE"
          value: "Hello World"
        - name: "HTTP_CLIENT_KEEP_ALIVES"
          value: "false"
---
apiVersion: consul.hashicorp.com/v1alpha1
kind: ServiceDefaults
metadata:
  name: service-b-v2
spec:
  protocol: "http"
