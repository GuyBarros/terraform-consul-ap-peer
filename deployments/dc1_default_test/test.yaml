# Service to expose test
apiVersion: v1
kind: Service
metadata:
  name: test
spec:
  selector:
    app: test
  type: LoadBalancer
  ports:
  - name: http
    protocol: TCP
    port: 5000
    targetPort: 5000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test
---
# test
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  labels:
    app: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test
  template:
    metadata:
      labels:
        app: test
      annotations:
#        "consul.hashicorp.com/connect-inject": "true"
#        "consul.hashicorp.com/transparent-proxy": "false"
#       "consul.hashicorp.com/connect-service-upstreams": "service-c:9091"
        "consul.hashicorp.com/connect-service-upstreams": "docdb-destination:27017"
         #For the upstream line, this points to the #"<servicename>.<consul-namespace>.<partitionname>:<port#>" of the upstream service.
         #If its in the same partition and namespace, it can be omitted, ex:
#        "consul.hashicorp.com/connect-service-upstreams": "service-c:9091"
    spec:
      serviceAccountName: test
      containers:
      - name: test
        image: guybarros/chat-app:0.0.10
        ports:
        - containerPort: 5000
        env:
        - name: "MONGODB_SERVER"
          # value: "127.0.0.1"
          value: "cluster1-docdb-instance-0.cwwnbexip9py.eu-west-2.docdb.amazonaws.com"              
        - name: "MONGODB_PORT"
          value: "27017"
          # To connect to the upstream mongodb pointing to local upstream port
         # value: "9091"
        - name: "MONGODB_USERNAME"
          value: "docadmin" 
        - name: "MONGODB_PASSWORD"
          value: "password"   
        - name: "MONGODB_COL"
          value: "testapp"
---
apiVersion: consul.hashicorp.com/v1alpha1
kind: ServiceDefaults
metadata:
  name: test
spec:
  protocol: "http"
